plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.4.0"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://maven.blamejared.com' }
	maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.terraformersmc:modmenu:3.2.5"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "AzureLib",
                "Specification-Vendor"    : "AzureDoom",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "AzureDoom",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

loom {
	accessWidenerPath = file("src/main/resources/azurelib.aw")
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
    from "LICENSE"
}

publishing {
    repositories {
        maven {
            name = "azurelib"
            url = "https://libs.azuredoom.com:4443/mods"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = project.maven_group
            artifactId = project.archives_base_name
            version = project.mod_version
            from components.java
            pom.withXml {
                asNode().dependencies.dependency.each { dep ->
                    if (dep.groupId.text() == 'com.terraformersmc' && dep.artifactId.text() == 'modmenu') {
                        dep.parent().remove(dep)
                    }
                }
            }
        }
    }
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

if (file('key.properties').exists()) {
    publishMods {
        def releaseProp = new Properties()
        File secretPropsFile = file("key.properties")
        releaseProp.load(secretPropsFile.newInputStream())
        file = remapJar.archiveFile
        changelog = rootProject.file("changelog.txt").text
        type = STABLE
        modLoaders.add("fabric")

        curseforge {
            projectId = "817423"
            projectSlug = "azurelib"
            accessToken = releaseProp.getProperty("curseKey")
            minecraftVersions.add("1.18.2")
            requires {
                slug = "fabric-api"
            }
        }
        modrinth {
            projectId = "7zlUOZvb"
            accessToken = releaseProp.getProperty('modrinthKey')
            minecraftVersions.add("1.18.2")
            requires {
                slug = "fabric-api"
            }
        }
    }
}